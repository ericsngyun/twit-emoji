import { type NextPage } from "next";
import Head from "next/head";
import { useUser, SignInButton, SignOutButton } from "@clerk/nextjs"

import { RouterOutputs, api } from "~/utils/api";


const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if(!user) return null;

  return <div className = "flex gap-3 w-full">
    <img 
      src = {user.profileImageUrl} 
      alt = "Profile Image" 
      className = "w-14 h-14 rounded-full" 
    />
    <input 
      placeholder = "Type some emojis!" 
      className = "bg-transparent grow p-4" 

    />
    <SignOutButton/>
  </div>
}


type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return(
    <div key = {post.id} className = "border-b border-slate-400">
      {/* <img src = {author?.profilePicture} alt = "author img"/> */}
      {post.content}
    </div>
  )
}

const Home: NextPage = () => {

  const { data, isLoading } = api.posts.getAll.useQuery();
  if (!data) return <div>Loading...</div>
  if(isLoading) return <div>Error Occurred</div>

  const user = useUser();


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className = "h-full w-full md:max-w-2xl border-x border-slate-400">
          <div className = "border-b border-slate-400 p-4">
            {!user.isSignedIn && 
              <div className = "flex justify-center">
                <SignInButton />
              </div>}
            {!!user.isSignedIn && <CreatePostWizard/>}
          </div>
          <div className = "flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
